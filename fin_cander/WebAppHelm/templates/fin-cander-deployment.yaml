apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  labels:
    app: {{ .Values.deployment.name }}
    group: db
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.deployment.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.deployment.name }}
        group: db
    spec:
      containers:
        - name: {{ .Values.deployment.name }}
          image: "{{ .Values.deployment.imageName }}:{{ .Values.deployment.imageTag }}"
          imagePullPolicy: {{ .Values.deployment.pullPolicy }}
          ports:
            - containerPort: {{ .Values.deployment.containerPort }}
          env:
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: fin-cander-secrets
                  key: SECRET_KEY
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: fin-cander-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: fin-cander-config
                  key: POSTGRES_USER
            - name: POSTGRES_NAME
              valueFrom:
                configMapKeyRef:
                  name: fin-cander-config
                  key: POSTGRES_NAME
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: fin-cander-config
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: fin-cander-config
                  key: POSTGRES_PORT
          resources:
            limits:
              memory: "256Mi"
              cpu: "500m"